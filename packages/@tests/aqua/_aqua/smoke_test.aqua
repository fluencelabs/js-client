import "@fluencelabs/registry/resources-api.aqua"

service HelloWorld("hello-world"):
    hello(str: string) -> string

func resourceTest(label: string) -> ?string, *string:
    res, errors <- createResource(label)
    <- res, errors

func helloTest() -> string:
    hello <- HelloWorld.hello("Fluence user")
    <- hello

service CalcService:
  add(num: f64) -> f64
  clear_state()  
  divide(num: f64) -> f64
  multiply(num: f64) -> f64
  state() -> f64
  subtract(num: f64) -> f64
  test_logs()

data ServiceCreationResult:
    success: bool
    service_id: ?string
    error: ?string

data RemoveResult:
    success: bool
    error: ?string

alias ListServiceResult: []string

service Srv("single_module_srv"):
    create(wasm_b64_content: string) -> ServiceCreationResult
    remove(service_id: string) -> RemoveResult
    list() -> ListServiceResult


func demo_calculation(service_id: string) -> f64:
    CalcService service_id
    CalcService.test_logs()
    CalcService.add(10)
    CalcService.multiply(5)
    CalcService.subtract(8)
    CalcService.divide(6)
    res <- CalcService.state()
    <- res

func marineTest(wasm64: string) -> f64:
    try:
        Srv "invalid"
        dontcare <- Srv.list()
    catch e:
        a = 1

    serviceResult <- Srv.create(wasm64)
    res <- demo_calculation(serviceResult.service_id!)
    <- res


